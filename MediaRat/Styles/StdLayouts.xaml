<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:converter="clr-namespace:Ops.NetCoe.LightFrame"
             xmlns:srcm="clr-namespace:XC.MediaRat"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Converters -->
    <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converter:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <converter:MultiplicationConverter x:Key="MaxSizeDependencyConverter" MinValue="50"/>
    <converter:TimestampNStringConverter x:Key="TimestampNStringConverter" />
    <converter:IntIntNConverter x:Key="IntNConverter" />
    <converter:BoolNegateConverter x:Key="BoolNotConverter" />
    <srcm:StringTCConverter x:Key="TimeCodeConverter" />
    <converter:NullableConverter x:Key="NValConverter" />

    <!-- This is the style for most borders -->
    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="CornerRadius" Value="10,10,10,10"/>
    </Style>

    <!-- This is the default style for all labels -->
    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource LabelFontColor}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="{DynamicResource LabelPadding}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>


    <Style x:Key="HorizontalListBox" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Background="Transparent"  />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="CommandTemplate">
        <Button Command="{Binding Path=Command}" Style="{DynamicResource ToolbarCommandButton}">
            <TextBlock Text="{Binding Path=Name}" Margin="5,0,5,0" ToolTipService.ToolTip="{Binding Path=Description}" />
        </Button>
    </DataTemplate>


    <Style TargetType="GridSplitter" x:Key="GridSplitterH">
        <!--Horizontal Grid Splitter-->
        <Setter Property="MinWidth" Value="100"/>
        <!--<Setter Property="Width" Value="120"/>-->
        <Setter Property="Margin" Value="5,0,5,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="6"/>
        <Setter Property="Foreground" Value="#FF484848"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="1,1,0,0" VerticalAlignment="Center" Background="{DynamicResource GridSplitterBackgroundBrushH}">
                        <Canvas Width="19" Height="4">
                            <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="1" />
                            <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="4" Canvas.Top="1" />
                            <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="8" Canvas.Top="1" />
                            <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="12" Canvas.Top="1" />
                            <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="16" Canvas.Top="1" />
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="GridSplitter" x:Key="GridSplitterV">
        <!--Vertical Grid Splitter-->
        <Setter Property="MinHeight" Value="23"/>
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Width" Value="6"/>
        <Setter Property="Foreground" Value="#FF484848"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="1,1,0,0" HorizontalAlignment="Center" Background="{DynamicResource GridSplitterBackgroundBrushV}">
                        <Canvas Width="4" Height="19">
                            <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="1" Canvas.Top="0" />
                            <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="1" Canvas.Top="4" />
                            <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="1" Canvas.Top="8" />
                            <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="1" Canvas.Top="12" />
                            <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="1" Canvas.Top="16" />
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="CommandMenuItemTemplate">
        <MenuItem Command="{Binding Path=Command}" Header="{Binding Path=Name}" ToolTipService.ToolTip="{Binding Path=Description}" />
    </DataTemplate>

    <Style x:Key="TabCloseButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!--The parts of the button control will be defined here.-->
                        <TextBlock x:Name="label"  FontFamily="Webdings" FontSize="12" Foreground="{DynamicResource HeaderDisabledFontColor}">r</TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--{DynamicResource MouseOverBrush}-->
                            <Setter Property="Foreground" Value="{DynamicResource GetAttentionColor}" TargetName="label"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- This template defines how to render a tab item with a close button. -->
    <!--<DataTemplate x:Key="ClosableTabItemTemplate">
        <Grid Width="Auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Name="_tabTitle" Text="{Binding Path=Title}" FontFamily="Portable User Interface" FontSize="12" FontWeight="Bold" Foreground="Maroon" Grid.Column="0" VerticalAlignment="Center"/>
            <ProgressBar Visibility="{Binding Path=IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Column="0" Grid.ColumnSpan="2" Margin="-2,0,-2,0" 
                         Width="{Binding ElementName=_tabTitle, Path=ActualWidth}" BorderThickness="0" HorizontalAlignment="Left"  VerticalAlignment="Stretch" 
                         Foreground="OrangeRed" Background="Transparent" IsIndeterminate="True" Canvas.ZIndex="-2" />
            <Button 
                        Command="{Binding Path=ExitCommand}" Grid.Column="1"
                        Content="X"
                        Cursor="Hand"
                        IsTabStop="False"
                        Margin="3,0,0,0"
                        Padding="0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        VerticalContentAlignment="Top"
                        HorizontalContentAlignment="Right"
                        Width="16" Height="16"                        
                        Style="{StaticResource TabCloseButtonStyle}"
                        >
                <Button.RenderTransform>
                    <TranslateTransform X="10"/>
                </Button.RenderTransform>
            </Button>
        </Grid>
    </DataTemplate>-->

    <Style x:Key="WorkspaceTab" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Background="{DynamicResource TabActiveLableBackground}" BorderBrush="{DynamicResource BorderBrush}" 
                                BorderThickness="{DynamicResource BorderThickness}" CornerRadius="6,0,0,0">
                            <Grid Width="Auto" Margin="6,2,4,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Name="_tabTitle" Text="{Binding Path=Title}" FontFamily="Segoe UI" FontSize="18" Margin="0" Padding="0" FontWeight="Bold" Foreground="{DynamicResource HeaderFontColor}" Grid.Column="0" VerticalAlignment="Center"/>
                                <ProgressBar Visibility="{Binding Path=IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Column="0" Grid.ColumnSpan="2" Margin="-2,0,0,0" 
                                     BorderThickness="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" 
                                     Foreground="DarkOrange" Background="Transparent" IsIndeterminate="True" Canvas.ZIndex="-2" />
                                <Button Command="{Binding Path=ExitCommand}" Grid.Column="1"
                                    Cursor="Hand" IsTabStop="False" Margin="0" Padding="0" HorizontalAlignment="Right" VerticalAlignment="Center"
                                    HorizontalContentAlignment="Right" Width="16" Height="16"
                                    Style="{StaticResource TabCloseButtonStyle}">
                                    <Button.RenderTransform>
                                        <TranslateTransform X="6"/>
                                    </Button.RenderTransform>
                                </Button>
                            </Grid>

                            <!--<ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                                ContentSource="Header" Margin="12,2,4,2"/>
                            Width="{Binding ElementName=_tabTitle, Path=ActualWidth}"
                            -->
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabActiveLableBackground}" />
                            <Setter TargetName="_tabTitle" Property="Foreground" Value="{DynamicResource HeaderFontColor}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabLableBackground}" />
                            <Setter TargetName="_tabTitle" Property="Foreground" Value="{DynamicResource HeaderDisabledFontColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--<Setter TargetName="_tabTitle" Property="Foreground" Value="{DynamicResource GetAttentionColor}" />-->
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabActiveLableBackground}" />
                        </MultiTrigger>
                     </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabWorkspaceStyle" TargetType="TabControl">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{DynamicResource PanelGradientBrush}">
            <!--<Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource BrightColor_2}" Offset="0"/>
                    <GradientStop Color="{DynamicResource LightColor_1}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>-->
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource WorkspaceTab}" />
    </Style>

    <Style x:Key="StaticTab" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Background="{DynamicResource TabActiveLableBackground}" BorderBrush="{DynamicResource BorderBrush}" 
                                BorderThickness="{DynamicResource BorderThickness}" CornerRadius="6,0,0,0">
                            <Grid Width="Auto" Margin="6,2,4,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Name="_tabTitle" Text="{TemplateBinding Property=Header}" FontFamily="Segoe UI" FontSize="18" Margin="0" Padding="0" FontWeight="Bold" Foreground="{DynamicResource HeaderFontColor}" Grid.Column="0" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabActiveLableBackground}" />
                            <Setter TargetName="_tabTitle" Property="Foreground" Value="{DynamicResource HeaderFontColor}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabLableBackground}" />
                            <Setter TargetName="_tabTitle" Property="Foreground" Value="{DynamicResource HeaderDisabledFontColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--<Setter TargetName="_tabTitle" Property="Foreground" Value="{DynamicResource GetAttentionColor}" />-->
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabActiveLableBackground}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="TextBox" x:Key="StatusMessage">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="TextBox" x:Key="StatusMessageNeutral" BasedOn="{StaticResource StatusMessage}">
        <Setter Property="Foreground" Value="Ivory"/>
    </Style>

    <Style TargetType="TextBox" x:Key="StatusMessagePositive" BasedOn="{StaticResource StatusMessage}">
        <Setter Property="Foreground" Value="{DynamicResource PositiveColor}"/>
    </Style>

    <Style TargetType="TextBox" x:Key="StatusMessageWarning" BasedOn="{StaticResource StatusMessage}">
        <Setter Property="Foreground" Value="{DynamicResource WarningColor}"/>
    </Style>

    <Style TargetType="TextBox" x:Key="StatusMessageError" BasedOn="{StaticResource StatusMessage}">
        <Setter Property="Foreground" Value="{DynamicResource ErrorColor}"/>
    </Style>

    <Style x:Key="SearchResultGridX" TargetType="DataGrid">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <!--<Setter Property="RowBackground" Value="#7F376170"/>
        <Setter Property="AlternatingRowBackground" Value="#7F707037"/>-->
        <Setter Property="RowBackground" Value="#FF555555"/>
        <Setter Property="AlternatingRowBackground" Value="#FF333333"/>

        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource InputFontColor}"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource GridColumnHeader}"/>
    </Style>

    <Style x:Key="CellRightAlign">
        <Setter Property="Control.HorizontalAlignment" Value="Right" />
    </Style>

    <!-- LOB-specific -->

    <converter:MappingConverter x:Key="MediaTypeSymbol" UseStringKey="True" DefaultResult="?!">
        <converter:MappingConverter.Items>
            <converter:MappingConverterItem Source="Image" Target="&#57620;"/>
            <converter:MappingConverterItem Source="Video" Target="&#57622;"/>
            <converter:MappingConverterItem Source="Audio" Target="&#57666;"/>
        </converter:MappingConverter.Items>
    </converter:MappingConverter>

    <DataTemplate DataType="{x:Type srcm:CtgPicker}">
        <StackPanel Orientation="Vertical" Margin="4" >
            <Label Content="{Binding Definition.Title}" ToolTip="{Binding Definition.Description}" Foreground="{DynamicResource GridHeaderFontColor}" FontFamily="Segoe UI" FontSize="16"/>
            <ItemsControl Name="_items" Grid.Row="1" ItemsSource="{Binding Items}" Height="Auto" MaxHeight="240" Background="Transparent" 
                                  BorderThickness="2" BorderBrush="{DynamicResource BorderBrush}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Height="26">
                            <CheckBox IsChecked="{Binding Path=Marker, Mode=TwoWay}" VerticalAlignment="Center"/>
                            <Label Content="{Binding Data}" Margin="2,-5,0,2" VerticalAlignment="Center" FontSize="16"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>

        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type srcm:CategoryFilter}">
        <StackPanel Orientation="Vertical" Margin="4" >
            <Label Content="{Binding Definition.Title}" ToolTip="{Binding Definition.Description}" Foreground="{DynamicResource GridHeaderFontColor}" FontFamily="Segoe UI" FontSize="16"/>
            <WrapPanel>
                <StackPanel Orientation="Horizontal" Height="26">
                    <Label VerticalAlignment="Center" FontSize="18" Margin="2,-8,2,2" FontFamily="Segoe UI Symbol" Foreground="{DynamicResource GridHeaderFontColor}" Content="&#57666;"/>
                    <Label VerticalAlignment="Center" FontSize="16" Margin="2,-5,0,2">Negate</Label>
                    <CheckBox Name="_useNegate" IsChecked="{Binding UseNegate, Mode=TwoWay}" VerticalAlignment="Center"
                              ToolTip="When checked filter result is negated"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Height="26">
                    <Label VerticalAlignment="Center" FontSize="16" Margin="12,-5,0,2">Must have ALL</Label>
                    <CheckBox Name="_useAndRule" IsChecked="{Binding UseAndRule, Mode=TwoWay}" VerticalAlignment="Center"
                              ToolTip="When checked ALL the selected categories must be present; otherwise ANY of the selected categories will satisfy the filter"/>
                </StackPanel>
            </WrapPanel>

            <ItemsControl Name="_items" Grid.Row="1" ItemsSource="{Binding Items}" Height="Auto" MaxHeight="240" Background="Transparent" 
                                  BorderThickness="2" BorderBrush="{DynamicResource BorderBrush}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Height="26">
                            <CheckBox IsChecked="{Binding Path=Marker, Mode=TwoWay}" VerticalAlignment="Center"/>
                            <Label Content="{Binding Data}" Margin="2,-5,0,2" VerticalAlignment="Center" FontSize="16"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>

        </StackPanel>
    </DataTemplate>

</ResourceDictionary>